# Generated by Django 3.2.19 on 2023-06-28 02:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DailySubscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unix_time', models.IntegerField()),
                ('subscribe', models.BooleanField(default=False)),
                ('unsubscribe', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'daily_subscribe',
            },
        ),
        migrations.CreateModel(
            name='SchedularTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_name', models.CharField(max_length=500)),
                ('readable_function', models.TextField(blank=True, null=True)),
                ('serialized_function', models.BinaryField(blank=True, null=True)),
                ('interval', models.CharField(blank=True, max_length=10, null=True)),
                ('last_run', models.IntegerField(blank=True, null=True)),
                ('next_run', models.IntegerField(blank=True, null=True)),
                ('is_enabled', models.BooleanField(default=True)),
                ('status', models.CharField(default='scheduled', max_length=50)),
                ('last_status', models.CharField(blank=True, max_length=50, null=True)),
                ('run_counts', models.IntegerField(default=0)),
                ('successful', models.IntegerField(default=0)),
                ('failed', models.IntegerField(default=0)),
                ('last_run_datetime', models.CharField(blank=True, max_length=50, null=True)),
                ('next_run_datetime', models.CharField(blank=True, max_length=50, null=True)),
                ('function_hash', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'schedular_table',
            },
        ),
        migrations.CreateModel(
            name='StockWatcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_low', models.FloatField(default=0)),
                ('price_high', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'stock_watcher',
            },
        ),
        migrations.CreateModel(
            name='Strategies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'db_table': 'strategies',
            },
        ),
        migrations.CreateModel(
            name='SubscribedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField(unique=True)),
                ('exchange', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.CharField(max_length=100)),
                ('cname', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'subscribed_data',
            },
        ),
        migrations.CreateModel(
            name='WebSocketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unix_time', models.IntegerField()),
                ('ltp', models.FloatField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='data', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'websocket_data',
            },
        ),
        migrations.CreateModel(
            name='WatcherHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ltp', models.FloatField()),
                ('unix_time', models.IntegerField()),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('stock', models.ForeignKey(db_column='stock', on_delete=django.db.models.deletion.DO_NOTHING, related_name='history', to='stocks_data_downloader.stockwatcher')),
            ],
            options={
                'db_table': 'watcher_history',
            },
        ),
        migrations.CreateModel(
            name='SymbolStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='active_symbols', to='stocks_data_downloader.strategies')),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='active_strategies', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'symbol_strategy',
            },
        ),
        migrations.AddField(
            model_name='stockwatcher',
            name='tick',
            field=models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='watcher', to='stocks_data_downloader.subscribeddata', to_field='token'),
        ),
        migrations.CreateModel(
            name='SchedularHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_at', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('exception', models.TextField(blank=True, null=True)),
                ('scheduler_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history', to='stocks_data_downloader.schedulartable')),
            ],
            options={
                'db_table': 'schedular_history',
            },
        ),
        migrations.CreateModel(
            name='CandleThirty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Open', models.FloatField(blank=True, null=True)),
                ('High', models.FloatField(blank=True, null=True)),
                ('Low', models.FloatField(blank=True, null=True)),
                ('Close', models.FloatField(blank=True, null=True)),
                ('Volume', models.IntegerField(blank=True, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='candle_thirty', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'candle_thirty',
            },
        ),
        migrations.CreateModel(
            name='CandleSixty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Open', models.FloatField(blank=True, null=True)),
                ('High', models.FloatField(blank=True, null=True)),
                ('Low', models.FloatField(blank=True, null=True)),
                ('Close', models.FloatField(blank=True, null=True)),
                ('Volume', models.IntegerField(blank=True, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='candle_sixty', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'candle_sixty',
            },
        ),
        migrations.CreateModel(
            name='CandleOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Open', models.FloatField(blank=True, null=True)),
                ('High', models.FloatField(blank=True, null=True)),
                ('Low', models.FloatField(blank=True, null=True)),
                ('Close', models.FloatField(blank=True, null=True)),
                ('Volume', models.IntegerField(blank=True, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='candle_one', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'candle_one',
            },
        ),
        migrations.CreateModel(
            name='CandleFive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Open', models.FloatField(blank=True, null=True)),
                ('High', models.FloatField(blank=True, null=True)),
                ('Low', models.FloatField(blank=True, null=True)),
                ('Close', models.FloatField(blank=True, null=True)),
                ('Volume', models.IntegerField(blank=True, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='candle_five', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'candle_five',
            },
        ),
        migrations.CreateModel(
            name='CandleFifteen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Open', models.FloatField(blank=True, null=True)),
                ('High', models.FloatField(blank=True, null=True)),
                ('Low', models.FloatField(blank=True, null=True)),
                ('Close', models.FloatField(blank=True, null=True)),
                ('Volume', models.IntegerField(blank=True, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
                ('tick', models.ForeignKey(db_column='tick', on_delete=django.db.models.deletion.DO_NOTHING, related_name='candle_fifteen', to='stocks_data_downloader.subscribeddata', to_field='token')),
            ],
            options={
                'db_table': 'candle_fifteen',
            },
        ),
    ]
